EASY QUESTIONS


1. Anagram
  function will return whether the string is an anagram or not.
  split() splits a string into an array of substrings, and returns the array.
  sort()-> sort an array/string alphabetically.
  join()-> returns an array as a strng and does not the change the original array.


function isAnagram(str1, str2) {
  let len1 = str1.length;
  let len2 = str2.length;
  if (len1 !== len2) {
    console.log("False");
    return;
  }
  let s = str1.split("").sort().join("");
  let t = str2.split("").sort().join("");
  if (s === t) {
    console.log("True");
  } else {
    console.log("False");
  }
}

isAnagram("sanya", "anas")

module.exports = isAnagram;






/*
  Write a function `findLargestElement` that takes an array of numbers and returns the largest element.
  Example:
  - Input: [3, 7, 2, 9, 1]
  - Output: 9
*/

1. Brute force approach 

function findLargestElement(arr) {
    if (arr.length === 0) {
        throw new Error("Array is empty");
    }

    let largest = arr[0];
    
    for (let i = 1; i < arr.length; i++) {
        if (arr[i] > largest) {
            largest = arr[i];
        }
    }
    
    return largest;
}

// Example usage
console.log(findLargestElement([3, 7, 2, 9, 1])); // Output: 9


module.exports = findLargestElement;




2. Using 'Math.max' and Spread operator

function findLargestElement(arr) {
    if (arr.length === 0) {
        throw new Error("Array is empty");
    }
    return Math.max(...arr);
}

// Example usage
console.log(findLargestElement([3, 7, 2, 9, 1])); // Output: 9


3. Using 'reduce' method

function findLargestElement(arr) {
    if (arr.length === 0) {
        throw new Error("Array is empty");
    }
    return arr.reduce((max, current) => current > max ? current : max, arr[0]);
}

// Example usage
console.log(findLargestElement([3, 7, 2, 9, 1])); // Output: 9

